// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * API Vizite
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiV1RecoverPasswordPost200Response,
  ApiV1RecoverPasswordPost400Response,
  ApiV1RecoverPasswordPostRequest,
  ApiV1ResetPasswordPost200Response,
  ApiV1ResetPasswordPost400Response,
  ApiV1ResetPasswordPostRequest,
  ApiV1SignInPost401Response,
  ApiV1SignInPostRequest,
  ApiV1SignOutPost200Response,
  ApiV1SignOutPost401Response,
  ApiV1SignUpPost200Response,
  ApiV1SignUpPostRequest,
  ValidationError,
} from '../models/index';
import {
    ApiV1RecoverPasswordPost200ResponseFromJSON,
    ApiV1RecoverPasswordPost200ResponseToJSON,
    ApiV1RecoverPasswordPost400ResponseFromJSON,
    ApiV1RecoverPasswordPost400ResponseToJSON,
    ApiV1RecoverPasswordPostRequestFromJSON,
    ApiV1RecoverPasswordPostRequestToJSON,
    ApiV1ResetPasswordPost200ResponseFromJSON,
    ApiV1ResetPasswordPost200ResponseToJSON,
    ApiV1ResetPasswordPost400ResponseFromJSON,
    ApiV1ResetPasswordPost400ResponseToJSON,
    ApiV1ResetPasswordPostRequestFromJSON,
    ApiV1ResetPasswordPostRequestToJSON,
    ApiV1SignInPost401ResponseFromJSON,
    ApiV1SignInPost401ResponseToJSON,
    ApiV1SignInPostRequestFromJSON,
    ApiV1SignInPostRequestToJSON,
    ApiV1SignOutPost200ResponseFromJSON,
    ApiV1SignOutPost200ResponseToJSON,
    ApiV1SignOutPost401ResponseFromJSON,
    ApiV1SignOutPost401ResponseToJSON,
    ApiV1SignUpPost200ResponseFromJSON,
    ApiV1SignUpPost200ResponseToJSON,
    ApiV1SignUpPostRequestFromJSON,
    ApiV1SignUpPostRequestToJSON,
    ValidationErrorFromJSON,
    ValidationErrorToJSON,
} from '../models/index';

export interface ApiV1RecoverPasswordPostOperationRequest {
    apiV1RecoverPasswordPostRequest: ApiV1RecoverPasswordPostRequest;
}

export interface ApiV1ResetPasswordPostOperationRequest {
    apiV1ResetPasswordPostRequest: ApiV1ResetPasswordPostRequest;
}

export interface ApiV1SignInPostOperationRequest {
    apiV1SignInPostRequest: ApiV1SignInPostRequest;
}

export interface ApiV1SignUpPostOperationRequest {
    apiV1SignUpPostRequest: ApiV1SignUpPostRequest;
}

/**
 * 
 */
export class AuthenticationApi extends runtime.BaseAPI {

    /**
     * Request a password reset link
     */
    async apiV1RecoverPasswordPostRaw(requestParameters: ApiV1RecoverPasswordPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1RecoverPasswordPost200Response>> {
        if (requestParameters['apiV1RecoverPasswordPostRequest'] == null) {
            throw new runtime.RequiredError(
                'apiV1RecoverPasswordPostRequest',
                'Required parameter "apiV1RecoverPasswordPostRequest" was null or undefined when calling apiV1RecoverPasswordPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/recover-password`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV1RecoverPasswordPostRequestToJSON(requestParameters['apiV1RecoverPasswordPostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1RecoverPasswordPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Request a password reset link
     */
    async apiV1RecoverPasswordPost(requestParameters: ApiV1RecoverPasswordPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1RecoverPasswordPost200Response> {
        const response = await this.apiV1RecoverPasswordPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Reset user password
     */
    async apiV1ResetPasswordPostRaw(requestParameters: ApiV1ResetPasswordPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1ResetPasswordPost200Response>> {
        if (requestParameters['apiV1ResetPasswordPostRequest'] == null) {
            throw new runtime.RequiredError(
                'apiV1ResetPasswordPostRequest',
                'Required parameter "apiV1ResetPasswordPostRequest" was null or undefined when calling apiV1ResetPasswordPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/reset-password`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV1ResetPasswordPostRequestToJSON(requestParameters['apiV1ResetPasswordPostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1ResetPasswordPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Reset user password
     */
    async apiV1ResetPasswordPost(requestParameters: ApiV1ResetPasswordPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1ResetPasswordPost200Response> {
        const response = await this.apiV1ResetPasswordPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Authenticate a user
     */
    async apiV1SignInPostRaw(requestParameters: ApiV1SignInPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1SignUpPost200Response>> {
        if (requestParameters['apiV1SignInPostRequest'] == null) {
            throw new runtime.RequiredError(
                'apiV1SignInPostRequest',
                'Required parameter "apiV1SignInPostRequest" was null or undefined when calling apiV1SignInPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/sign-in`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV1SignInPostRequestToJSON(requestParameters['apiV1SignInPostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1SignUpPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Authenticate a user
     */
    async apiV1SignInPost(requestParameters: ApiV1SignInPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1SignUpPost200Response> {
        const response = await this.apiV1SignInPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Log out a user
     */
    async apiV1SignOutPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1SignOutPost200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/v1/sign-out`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1SignOutPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Log out a user
     */
    async apiV1SignOutPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1SignOutPost200Response> {
        const response = await this.apiV1SignOutPostRaw(initOverrides);
        return await response.value();
    }

    /**
     * Register a new user
     */
    async apiV1SignUpPostRaw(requestParameters: ApiV1SignUpPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1SignUpPost200Response>> {
        if (requestParameters['apiV1SignUpPostRequest'] == null) {
            throw new runtime.RequiredError(
                'apiV1SignUpPostRequest',
                'Required parameter "apiV1SignUpPostRequest" was null or undefined when calling apiV1SignUpPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/sign-up`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV1SignUpPostRequestToJSON(requestParameters['apiV1SignUpPostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1SignUpPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Register a new user
     */
    async apiV1SignUpPost(requestParameters: ApiV1SignUpPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1SignUpPost200Response> {
        const response = await this.apiV1SignUpPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
