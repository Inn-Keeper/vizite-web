// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * API Vizite
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClientRegistryRelationships } from './ClientRegistryRelationships';
import {
    ClientRegistryRelationshipsFromJSON,
    ClientRegistryRelationshipsFromJSONTyped,
    ClientRegistryRelationshipsToJSON,
    ClientRegistryRelationshipsToJSONTyped,
} from './ClientRegistryRelationships';
import type { ClientRegistryAttributes } from './ClientRegistryAttributes';
import {
    ClientRegistryAttributesFromJSON,
    ClientRegistryAttributesFromJSONTyped,
    ClientRegistryAttributesToJSON,
    ClientRegistryAttributesToJSONTyped,
} from './ClientRegistryAttributes';

/**
 * 
 * @export
 * @interface ClientRegistry
 */
export interface ClientRegistry {
    /**
     * Registry ID
     * @type {string}
     * @memberof ClientRegistry
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientRegistry
     */
    type?: string;
    /**
     * 
     * @type {ClientRegistryAttributes}
     * @memberof ClientRegistry
     */
    attributes?: ClientRegistryAttributes;
    /**
     * 
     * @type {ClientRegistryRelationships}
     * @memberof ClientRegistry
     */
    relationships?: ClientRegistryRelationships;
}

/**
 * Check if a given object implements the ClientRegistry interface.
 */
export function instanceOfClientRegistry(value: object): value is ClientRegistry {
    return true;
}

export function ClientRegistryFromJSON(json: any): ClientRegistry {
    return ClientRegistryFromJSONTyped(json, false);
}

export function ClientRegistryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientRegistry {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : json['type'],
        'attributes': json['attributes'] == null ? undefined : ClientRegistryAttributesFromJSON(json['attributes']),
        'relationships': json['relationships'] == null ? undefined : ClientRegistryRelationshipsFromJSON(json['relationships']),
    };
}

export function ClientRegistryToJSON(json: any): ClientRegistry {
    return ClientRegistryToJSONTyped(json, false);
}

export function ClientRegistryToJSONTyped(value?: ClientRegistry | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'attributes': ClientRegistryAttributesToJSON(value['attributes']),
        'relationships': ClientRegistryRelationshipsToJSON(value['relationships']),
    };
}

