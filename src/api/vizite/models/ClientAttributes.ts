// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * API Vizite
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ClientAttributes
 */
export interface ClientAttributes {
    /**
     * Client's UUID (version 7)
     * @type {string}
     * @memberof ClientAttributes
     */
    uuid?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    phone?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    document?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    address?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    number?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    complement?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    neighborhood?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    zipCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    coordinates?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientAttributes
     */
    picture?: string;
}

/**
 * Check if a given object implements the ClientAttributes interface.
 */
export function instanceOfClientAttributes(value: object): value is ClientAttributes {
    return true;
}

export function ClientAttributesFromJSON(json: any): ClientAttributes {
    return ClientAttributesFromJSONTyped(json, false);
}

export function ClientAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientAttributes {
    if (json == null) {
        return json;
    }
    return {
        
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'name': json['name'] == null ? undefined : json['name'],
        'email': json['email'] == null ? undefined : json['email'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'document': json['document'] == null ? undefined : json['document'],
        'address': json['address'] == null ? undefined : json['address'],
        'number': json['number'] == null ? undefined : json['number'],
        'complement': json['complement'] == null ? undefined : json['complement'],
        'neighborhood': json['neighborhood'] == null ? undefined : json['neighborhood'],
        'zipCode': json['zip_code'] == null ? undefined : json['zip_code'],
        'coordinates': json['coordinates'] == null ? undefined : json['coordinates'],
        'status': json['status'] == null ? undefined : json['status'],
        'type': json['type'] == null ? undefined : json['type'],
        'picture': json['picture'] == null ? undefined : json['picture'],
    };
}

export function ClientAttributesToJSON(json: any): ClientAttributes {
    return ClientAttributesToJSONTyped(json, false);
}

export function ClientAttributesToJSONTyped(value?: ClientAttributes | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'uuid': value['uuid'],
        'name': value['name'],
        'email': value['email'],
        'phone': value['phone'],
        'document': value['document'],
        'address': value['address'],
        'number': value['number'],
        'complement': value['complement'],
        'neighborhood': value['neighborhood'],
        'zip_code': value['zipCode'],
        'coordinates': value['coordinates'],
        'status': value['status'],
        'type': value['type'],
        'picture': value['picture'],
    };
}

