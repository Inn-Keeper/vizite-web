// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * API Vizite
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClientRegistryRelationshipsClient } from './ClientRegistryRelationshipsClient';
import {
    ClientRegistryRelationshipsClientFromJSON,
    ClientRegistryRelationshipsClientFromJSONTyped,
    ClientRegistryRelationshipsClientToJSON,
    ClientRegistryRelationshipsClientToJSONTyped,
} from './ClientRegistryRelationshipsClient';
import type { ClientRegistryRelationshipsUser } from './ClientRegistryRelationshipsUser';
import {
    ClientRegistryRelationshipsUserFromJSON,
    ClientRegistryRelationshipsUserFromJSONTyped,
    ClientRegistryRelationshipsUserToJSON,
    ClientRegistryRelationshipsUserToJSONTyped,
} from './ClientRegistryRelationshipsUser';

/**
 * 
 * @export
 * @interface ClientRegistryRelationships
 */
export interface ClientRegistryRelationships {
    /**
     * 
     * @type {ClientRegistryRelationshipsClient}
     * @memberof ClientRegistryRelationships
     */
    client?: ClientRegistryRelationshipsClient;
    /**
     * 
     * @type {ClientRegistryRelationshipsUser}
     * @memberof ClientRegistryRelationships
     */
    user?: ClientRegistryRelationshipsUser;
}

/**
 * Check if a given object implements the ClientRegistryRelationships interface.
 */
export function instanceOfClientRegistryRelationships(value: object): value is ClientRegistryRelationships {
    return true;
}

export function ClientRegistryRelationshipsFromJSON(json: any): ClientRegistryRelationships {
    return ClientRegistryRelationshipsFromJSONTyped(json, false);
}

export function ClientRegistryRelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientRegistryRelationships {
    if (json == null) {
        return json;
    }
    return {
        
        'client': json['client'] == null ? undefined : ClientRegistryRelationshipsClientFromJSON(json['client']),
        'user': json['user'] == null ? undefined : ClientRegistryRelationshipsUserFromJSON(json['user']),
    };
}

export function ClientRegistryRelationshipsToJSON(json: any): ClientRegistryRelationships {
    return ClientRegistryRelationshipsToJSONTyped(json, false);
}

export function ClientRegistryRelationshipsToJSONTyped(value?: ClientRegistryRelationships | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'client': ClientRegistryRelationshipsClientToJSON(value['client']),
        'user': ClientRegistryRelationshipsUserToJSON(value['user']),
    };
}

